/********************************************************
 * 설명:  회원정보 > 멤버십관리 > 회원거래현황
 * 수정일      	수정자       수정내용
 * ------------------------------------------------------
 * ------------------------------------------------------
 * author	: 김경진
 * since	: 2017.01.19
 * version : 1.0
 ********************************************************/
// ----------------------- 그리드 설정 시작 -------------------------------------
//rMate그리드 경로정보 셋팅
rMateGridH5.setAssetsPath("/resources/js/rMateGridH5/Assets/");
rMateGridH5.setConfig(rMateGridH5.style);

//rMate 그리드 생성 준비가 완료된 상태 시 호출할 함수를 지정합니다.
var jsVars1 = "rMateOnLoadCallFunction=gridReadyHandler";

//rMateDataGrid 를 생성합니다.
//파라메터 (순서대로)
//1. 그리드의 id ( 임의로 지정하십시오. )
//2. 그리드가 위치할 div 의 id (즉, 그리드의 부모 div 의 id 입니다.)
//3. 그리드 생성 시 필요한 환경 변수들의 묶음인 jsVars
//4. 그리드의 가로 사이즈 (생략 가능, 생략 시 100%)
//5. 그리드의 세로 사이즈 (생략 가능, 생략 시 100%)
rMateGridH5.create("grid1", "gridHolder1", jsVars1, "100%", "275px");
rMateGridH5.create("grid2", "gridHolder2", jsVars1, "100%", "300px");

//그리드의 속성인 rMateOnLoadCallFunction 으로 설정된 함수.
//rMate 그리드의 준비가 완료된 경우 이 함수가 호출됩니다.
//이 함수를 통해 그리드에 레이아웃과 데이터를 삽입합니다.
//파라메터 : id - rMateGridH5.create() 사용 시 사용자가 지정한 id 입니다.

// 전역변수
var gridApp1, gridRoot1, dataGrid1, dataRow1, selectorColumn1;
var gridApp2, gridRoot2, dataGrid2, dataRow2, selectorColumn2;
var collection1, collection2; // 그리드의 데이터 객체
var gridData = [];
var totalCnt = 0;	// 전체건수
var RowsPerPage = 20;// 1페이지에서 보여줄 행 수
var pageIndex = 1;	// 요청페이지번호

//그리드1 레디 핸들러
function gridReadyHandler(id) {
	// rMateGrid 관련 객체
	
	if(id == "grid1")
	{
		//그리드1에 헤더 및 레이아웃 셋팅 (개인탭)
		gridApp1 = document.getElementById(id); // 그리드를 포함하는 div 객체
		gridRoot1 = gridApp1.getRoot(); // 데이터와 그리드를 포함하는 객체
		
		gridApp1.setLayout(layoutStr1);	// 데이터와 그리드를 포함하는 객체
		gridApp1.setData(gridData);	// 초기 그리드 행추가를 위해 null 데이터 셋팅
		
		gridRoot1.addEventListener("layoutComplete", layoutCompleteHandler1);
		gridRoot1.addEventListener("dataComplete", dataCompleteHandler1);
	}
	else if(id == "grid2")
	{
		//그리드1에 헤더 및 레이아웃 셋팅 (사업자탭)
		gridApp2 = document.getElementById(id); // 그리드를 포함하는 div 객체
		gridRoot2 = gridApp2.getRoot(); // 데이터와 그리드를 포함하는 객체
		
		gridApp2.setLayout(layoutStr2);
		gridApp2.setData(gridData);	// 초기 그리드 행추가를 위해 null 데이터 셋팅
		
		gridRoot2.addEventListener("layoutComplete", layoutCompleteHandler2);
		gridRoot2.addEventListener("dataComplete", dataCompleteHandler2);
	}
	
}

function layoutCompleteHandler1() {
	dataGrid1 = gridRoot1.getDataGrid();  // 그리드 객체
	
	// 헤드 정렬 초기화
	rMateSortHeadInit(dataGrid1);
}

//그리드1 컴플릿트 핸들러
function dataCompleteHandler1(event) {
	
	// 데이터 그리드의 내부의 데이터를 담고있는 객체 입니다.
	collection1 = gridRoot1.getCollection();
	
	//그리드1 셀선택 이벤트
	dataGrid1.addEventListener("itemClick", itemClickHandler1);
	
	//그리드1 헤더 클릭 이벤트
	dataGrid1.addEventListener("headerRelease", headerRelease1);
	
	drawGridPagingNavigation(totalCnt, RowsPerPage, pageIndex, "gridMovePage");
}

function layoutCompleteHandler2() {
	dataGrid2 = gridRoot2.getDataGrid();  // 그리드 객체
	
}

//그리드2 컴플릿트 핸들러
function dataCompleteHandler2(event) {
	
	// 데이터 그리드의 내부의 데이터를 담고있는 객체 입니다.
	collection2 = gridRoot2.getCollection();
	
}

//그리드1 ROW 원클릭 이벤트
function itemClickHandler1(event){
	
	var rowIndex = event.rowIndex;
	var columnIndex = event.columnIndex;
	dataRow1 = gridRoot1.getItemAt(rowIndex);
	// 컬럼중 숨겨진 컬럼(visible false인 컬럼)이 있으면 getDisplayableColumns()를 사용하여 컬럼을 가져옵니다.
	var column = dataGrid1.getDisplayableColumns()[columnIndex];
	var dataField = column.getDataField();
	
	$("#P_CUST_NO").val(dataRow1.CUST_NO);
	
	getGridData2();
}

// 그리드 헤더 정렬 기능 이벤트
function headerRelease1(event) {
	
	//헤드 정렬 설정
	rMateSortHeadRelease(dataGrid1, event, "P_COLUMN_NAME", "P_ORDERBY");
	
	getGridData(false);
}

function gridMovePage(page) {
	$("#pageIndex").val(page);
	pageIndex = page;
	getGridData(false);
}

//그리드1 헤더 및 레이아웃
var layoutStr1 =
	'<rMateGrid>\
		<DateFormatter id="datefmt" formatString="YYYY-MM-DD"/>\
		<DataGrid id="dg1" sortableColumns="true" horizontalScrollPolicy="auto" >\
			<columns>\
				<DataGridColumn dataField="CUST_NAME" headerText="'+cusName+'" textAlign="center" width="70" />\
				<DataGridColumn dataField="CUST_NO" headerText="'+cusNo+'" textAlign="center" width="70" />\
				<DataGridColumn dataField="BIR_DATE" headerText="'+birthDate+'" textAlign="center" width="80" formatter="{datefmt}" />\
				<DataGridColumn dataField="TEL_NO" headerText="'+phoneNumber+'" textAlign="center" sortable="false" labelJsFunction="rMateLabelPhoneFunc2" />\
				<DataGridColumn dataField="MOBIL_NO" headerText="'+mobilePhoneNumber+'" textAlign="center" sortable="false" labelJsFunction="rMateLabelPhoneFunc" />\
				<DataGridColumn dataField="BUSI_NAME" headerText="'+supplyName+'" textAlign="left" />\
				<DataGridColumn dataField="BUSI_NO" headerText="'+busiNo+'" textAlign="center" />\
				<DataGridColumn dataField="SEND_EMAIL" headerText="'+email+'" textAlign="left" width="140" sortable="false" />\
				<DataGridColumn dataField="MBR_GRADE_NAME" headerText="'+mbrGrade+'" textAlign="center" sortable="false" />\
				<DataGridColumn dataField="STR_NAME" headerText="등록점" textAlign="center" width="70" />\
				<DataGridColumn dataField="IDATE_DT" headerText="'+inputDate+'" textAlign="center" />\
				<DataGridColumn dataField="ADDR" headerText="'+addr+'" textAlign="left" width="210" />\
				<DataGridColumn dataField="CORP_CODE" headerText="" textAlign="center" visible="false"/>\
				<DataGridColumn dataField="STR_CODE" headerText="" textAlign="center" visible="false"/>\
			</columns>\
		</DataGrid>\
	</rMateGrid>';

//그리드2 헤더 및 레이아웃
var layoutStr2 =
	'<rMateGrid>\
		<SpanRowAttribute id="sumRowAttr_T" styleName="allTotalStyle" backgroundColor="#bbd713" />\
		<SpanCellAttribute id="sumTotalCellAttr" colNo="0" styleName="allTotalHeaderStyle" backgroundColor="#a8c305" colSpan="7" />\
		<NumberFormatter id="numfmt" useThousandsSeparator="true"/>\
		<DataGrid id="dg2" >\
			<groupedColumns>\
				<DataGridColumn dataField="SALE_DT" headerText="'+selngDate+'" textAlign="center" />\
				<DataGridColumn dataField="STR_NAME" headerText="'+storNm+'" textAlign="center" />\
				<DataGridColumn dataField="POS_NAME" headerText="'+pos+'" textAlign="center" />\
				<DataGridColumn dataField="TRXN_NO" headerText="거래번호" textAlign="center" />\
				<DataGridColumn dataField="TRXN_NO_OLD" headerText="원거래번호" textAlign="center" width="200" />\
				<DataGridColumn dataField="CANC_FLAG_NAME" headerText="매출구분" textAlign="center" width="90" />\
				<DataGridColumn dataField="MBR_CARD_NO" headerText="'+membershipCard+'" textAlign="center" />\
				<DataGridColumn dataField="SALE_POINT" headerText="발생포인트" textAlign="right" formatter="{numfmt}" />\
				<DataGridColumn dataField="USE_POINT" headerText="'+minusPoint+'" textAlign="right" formatter="{numfmt}" />\
				<DataGridColumn dataField="CORP_CODE" headerText="" textAlign="center" visible="false"/>\
				<DataGridColumn dataField="CUST_NO" headerText="" textAlign="center" visible="false"/>\
				<DataGridColumn dataField="POS_NO" headerText="" textAlign="center" visible="false"/>\
			</groupedColumns>\
			<dataProvider>\
				<SpanSummaryCollection source="{$gridData}">\
					<summaries>\
				        <SpanSummaryRow summaryPlacement="last" label="' + sm + '" labelDataField="SALE_DT" rowAttribute="{sumRowAttr_T}" cellAttribute="{sumTotalCellAttr}" >\
				            <SpanSummaryField dataField="SALE_POINT" summaryOperation="SUM" />\
				            <SpanSummaryField dataField="USE_POINT" summaryOperation="SUM" />\
				        </SpanSummaryRow>\
				    </summaries>\
				</SpanSummaryCollection>\
			</dataProvider>\
		</DataGrid>\
	</rMateGrid>';
//----------------------- 그리드 설정 끝 -----------------------

// 회원정보 조회
function getGridData(isHeadDefault, isFirstPage) {
	
	if(isHeadDefault == true)
	{
		// 헤더 기본값 셋팅
		rMateSortHeadSetDefault(dataGrid1, "P_COLUMN_NAME", "P_ORDERBY");
	}
	
	/*if($("#P_STR_CODE").val() == null || $("#P_STR_CODE").val() == "")
	{
		alert(storNm + msgConfirm);
		$("#P_STR_CODE").focus();
		return;
	}*/
	
	/*if($("#P_GONG_DT").val() == null || $("#P_GONG_DT").val() == "")
	{
		alert(selngDate + msgConfirm);
		$("#P_GONG_DT").focus();
		return;
	}
	
	if($("#P_END_DT").val() == null || $("#P_END_DT").val() == "")
	{
		alert(selngDate + msgConfirm);
		$("#P_END_DT").focus();
		return;
	}*/
	
	if($("#P_GONG_DT").val() == null || $("#P_GONG_DT").val() == "" && $("#P_END_DT").val() == null || $("#P_END_DT").val() == "")
	{
		var gongDt = $("#P_GONG_DT").val().replace(/-/g, "");
		var endDt = $("#P_END_DT").val().replace(/-/g, "");
		if(gongDt > endDt)
		{
			alert(msgDateValidation);
			$("#P_END_DT").focus();
			return;
		}
	}
	
	/*if($("#P_MBR_GRADE").val() == null || $("#P_MBR_GRADE").val() == "")
	{
		alert(mbrGrade + msgConfirm);
		$("#P_MBR_GRADE").focus();
		return;
	}*/
	
	if(isFirstPage) {
		$("#pageIndex").val(1);
		pageIndex = 1;
	}
	
	var param = $("#sertch_frm").serializeArray();
	
	//데이터 조회후 그리드1에 데이터를 넣을때 itemClickHandler1 실행된다.
	jQuery.ajax({
	    url:"/memberDealList.do",
	    type:"POST",
		datatype:"json",
		//async:false,
		data: param,
		beforeSend : function(){
			dataGrid1.setEnabled(false);
			gridRoot1.addLoadingBar();
		},
		success:function(data){
			
			if(typeof data.list != "undefiend" && data.list != null)
			{
				//그리드1 데이터 조회
				gridData = data.list;
				gridApp1.setData(gridData);
				totalCnt = data.totalCount;
				
				drawGridPagingNavigation(totalCnt, RowsPerPage, pageIndex, "gridMovePage");
			}
	    },
	    complete : function(data) {
	    	dataGrid1.setEnabled(true);
			gridRoot1.removeLoadingBar();
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);
	    	dataGrid1.setEnabled(true);
			gridRoot1.removeLoadingBar();
	    }
	});
}

// 회원별 거래현황
function getGridData2() {
	
	var param = $("#sertch_frm").serializeArray();
	
	//데이터 조회후 그리드1에 데이터를 넣을때 itemClickHandler1 실행된다.
	jQuery.ajax({ 
	    url:"/memberDealStatusList.do",
	    type:"POST",
		datatype:"json",
		//async:false,
		data: param,
		beforeSend : function(){
			dataGrid2.setEnabled(false);
			gridRoot2.addLoadingBar();
		},
		success:function(data){
			
			if(typeof data.list != "undefiend" && data.list != null)
			{
				//그리드1 데이터 조회
				gridData = data.list;
				gridApp2.setData(gridData);
			}
	    },
	    complete : function(data) {
	    	dataGrid2.setEnabled(true);
			gridRoot2.removeLoadingBar();
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);
	    	dataGrid2.setEnabled(true);
			gridRoot2.removeLoadingBar();
	    }
	});
}



//(회원검색) 팝업 호출 function
function btn_comm_user_search(){
	
	$("#comm_pop_wrap20").dialog("open");
	gridApp29.resize();
	
	// callback함수명을 P_CALLBACK_NM1에 값을 넘겨준다. (하나면 안넣어도 된다.)
	$("#P_CALLBACK_NM20").val("fn_comm_user_callback(dataRow29)");
	
	if($("#P_CUST_NAME").val()) {
		
		$("#P_TEXT20").val($("#P_CUST_NAME").val());
		btn_comm_search('20');
		
	}
	
//	$('#comm_pop_wrap1' ).dialog( 'open' );
//	gridApp10.resize();
//	  
//	// 검색 텍스트를 부모창에 입력 할 경우 공통팝업이 뜨자마자 조회가 된다.
//	if($("#P_CUST_NAME").val() != null && $("#P_CUST_NAME").val() != ""){
//		$("#P_TEXT1").val($("#P_CUST_NAME").val());
//		btn_comm_search('1');
//	}
}

//(회원검색) 팝업 callback function
function fn_comm_user_callback(dataRow){
	$('#P_CUST_NAME' ).val(dataRow.CUST_NAME);		// 회원명
	//$('#CUS_NAME_TEXT' ).text(dataRow.CUST_NAME);	// 회원명
}








// 엑셀다운로드
function excelExport()
{
	var date = new CommDateManager().getDate("yyyymmdd");
	
	dataGrid2.exportFileName = "거래현황" + "_" + date + ".xlsx";
	gridRoot2.excelExportSave("/gridExcelDown.do", false);
}

$(document).ready(function () {
	
	$("#P_CUST_NAME").keydown(function(key) {		
		if(key.keyCode == 13){
			btn_comm_user_search();
		}
	});		
	
	//최초 도움말 불러오기
	setHelpMessage($(location).attr("pathname").replace("/",""));
	
	//달력설정
	$(".datepicker").datepicker();
	
	var date = new CommDateManager().getDate("yyyy-mm-dd");
	var beforeDate = new CommDateManager().getDate("yyyy-mm") + "-01";
	
	$("#P_GONG_DT").val(beforeDate);
	$("#P_END_DT").val(date);
	
	// 점포코드 콤보 가져오기
	getStoreCode("P_STR_CODE");
	
	getCommonCodeSelectBoxList("P_BUSI_FLAG", "BUSI_FLAG");		// 회원구분
	getCommonCodeSelectBoxList("P_MBR_GRADE", "MBR_GRADE");		// 회원등급
	
	// 조회 버튼 클릭
	$("#btn_search").click(function() {
		gridApp2.setData([]);
		getGridData(true, true);
	});
	
	// 거래현황 엑셀 다운
	$("#btn_excel_down").click(function() {
		excelExport();
	});
	
	// 회원구분 체인지 이벤트 (회원구분 변경시 회원등급 리스트 재조회)
	$("#P_BUSI_FLAG").change(function() {
		getCommonCodeGradeSelectBoxList("P_MBR_GRADE", "MBR_GRADE", $("#P_BUSI_FLAG").val(), true);	// 회원등급
	});
	
});