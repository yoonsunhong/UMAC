/********************************************************
 * 설명:  주류판매대장 관리
 * 수정일      	수정자       수정내용
 * ------------------------------------------------------
 * ------------------------------------------------------
 * author	: 오동근
 * since	: 2017.03.29
 * version : 1.0
 ********************************************************/



$(document).ready(function(){
	init();
	//최초 도움말 불러오기 
	setHelpMessage($(location).attr('pathname').replace('/',''));
	
	/**검색조건 날짜 체크*/
	 $(".datepicker1").datepicker({ onSelect: function(dateText){ 	 	 
			 var CUR_DT = new CommDateManager().after(0, 0, 0).getDate("yyyy-mm-dd"); 
			 if($("#P_SEARCH_START_DT").val()  >  $("#P_SEARCH_END_DT").val()){   
				//날자 검색조건의 시작일이 종료일보다 클 수 없습니다.
				alert(msgDateValidation);
				$("#P_SEARCH_START_DT").val(CUR_DT);
				return;
			}	 
	 	}, 	
	 	showMonthAfterYear:true 
	});
		 
	$(".datepicker2").datepicker({ onSelect: function(dateText){
			var CUR_DT = new CommDateManager().after(0, 0, 0).getDate("yyyy-mm-dd"); 
			if($("#P_SEARCH_START_DT").val()  >  $("#P_SEARCH_END_DT").val()){
				//날자 검색조건의 시작일이 종료일보다 클 수 없습니다.
				alert(msgDateValidation);
				$("#P_SEARCH_END_DT").val(CUR_DT);
				return;
			}	 
	 	}, 	
	 	showMonthAfterYear:true 
	});
	
	$(".datepicker").datepicker();
	
	// 점포명 체인지 이벤트
	$("#P_STR_CODE").change(function(){
		getPosList();
	});
	
	$("#P_POST_NO").on('input',function(){
		if($("#P_POST_NO").val() != ''){
			alert("success!");
			fnPostCallBack();
		}
	});
	
	/*
	//사용자 권한정보 조회
	 var psotValue = {};
	 
	 jQuery.ajax({ 
	    url:"/selectUserOrgType.do",         
	    type:"POST",
		datatype:"json",
		async:false,
		data: psotValue,
		success:function(data){  
			var sessionGroupCode = data[0].GROUP_CODE;
			if(sessionGroupCode == "ROLE001" || sessionGroupCode == "ROLE025" || sessionGroupCode == "ROLE026" || sessionGroupCode == "ROLE002"){
				$("#P_STR_CODE").attr("disabled", false);
			}
	    },
	    complete : function(data) {
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);   
	    }
	});*/
	
});

// ----------------------- 그리드 설정 시작 -------------------------------------
//rMate그리드 경로정보 셋팅
rMateGridH5.setAssetsPath("/resources/js/rMateGridH5/Assets/");
rMateGridH5.setConfig(rMateGridH5.style);

// rMate 그리드 생성 준비가 완료된 상태 시 호출할 함수를 지정합니다.
var jsVars = "rMateOnLoadCallFunction=gridReadyHandler";

// rMateDataGrid 를 생성합니다.
// 파라메터 (순서대로)
//  1. 그리드의 id ( 임의로 지정하십시오. )
//  2. 그리드가 위치할 div 의 id (즉, 그리드의 부모 div 의 id 입니다.)
//  3. 그리드 생성 시 필요한 환경 변수들의 묶음인 jsVars
//  4. 그리드의 가로 사이즈 (생략 가능, 생략 시 100%)
//  5. 그리드의 세로 사이즈 (생략 가능, 생략 시 100%)
rMateGridH5.create("grid1", "gridHolder1", jsVars, "100%", "600px");
//rMateGridH5.create("grid2", "gridHolder2", jsVars);

// 그리드의 속성인 rMateOnLoadCallFunction 으로 설정된 함수.
// rMate 그리드의 준비가 완료된 경우 이 함수가 호출됩니다.
// 이 함수를 통해 그리드에 레이아웃과 데이터를 삽입합니다.
// 파라메터 : id - rMateGridH5.create() 사용 시 사용자가 지정한 id 입니다.
function gridReadyHandler(id) {
	if (id == "grid1") {
		// rMateGrid 관련 객체
		gridApp1 = document.getElementById(id);	// 그리드를 포함하는 div 객체
		gridRoot1 = gridApp1.getRoot();	// 데이터와 그리드를 포함하는 객체

		gridApp1.setLayout(layoutStr1);
		gridApp1.setData(gridData);
		
		var itemDoubleClickHandler1 = function(event) {
			var rowIndex = event.rowIndex;
			var columnIndex = event.columnIndex;
			var dataRow = gridRoot1.getItemAt(rowIndex);
			// 컬럼중 숨겨진 컬럼(visible false인 컬럼)이 있으면 getDisplayableColumns()를 사용하여 컬럼을 가져옵니다.
			var column = dataGrid1.getDisplayableColumns()[columnIndex];
			var dataField = column.getDataField();
			
			if (dataField == "ADDR") {
				editRowIndex = rowIndex;
				editDataRow = dataRow;
				editDataField = dataField;
				execDaumPostcode2('fnPostCallBack');
				
			}
		};
		
		var layoutCompleteHandler1 = function(event) {
			dataGrid1 = gridRoot1.getDataGrid();	// 그리드 객체 

			var CARD_CODE = gridRoot1.getObjectById("SEX");
			CARD_CODE.setItemRendererDataProvider( getCommonCodeSelectBoxListInGrid2('SEX') );
			
			dataGrid1.setDoubleClickEnabled(true);
			dataGrid1.addEventListener("itemDoubleClick", itemDoubleClickHandler1);
		};
		
		gridRoot1.addEventListener("layoutComplete", layoutCompleteHandler1);
		
	}  
}

//그리드의 데이터 제어를 위한 전역변수 설정
var gridApp1, gridRoot1, dataGrid1, dataRow1, clickData1, selectorColumn1;

//----------------------- 그리드 설정 끝 -----------------------
var layoutStr1;
//그리드1 헤더 설정

layoutStr1 =
'<rMateGrid>\
	<DateFormatter id="datefmt" formatString="YYYY-MM-DD"/>\
	<NumberFormatter id="numfmt" useThousandsSeparator="true"/>\
	<DataGrid id="dg1" sortableColumns="true" editable="true" horizontalScrollPolicy="auto" lockedColumnCount="3" verticalAlign="middle">\
		<groupedColumns>\
			<DataGridColumn dataField="SALE_DT"  	headerText="' + selngDate + '"  	textAlign="center" 	width="80"	editable="false" />\
			<DataGridColumn dataField="POS_NO" 		headerText="' + pos + '" 			textAlign="center" 	width="60"	editable="false" />\
			<DataGridColumn dataField="TRXN_NO"  	headerText="' + dealingsNumber + '"	textAlign="center" 	width="75"	editable="false" />\
			<DataGridColumn dataField="MID_CODE"  	visible="false"	 />\
			<DataGridColumn dataField="MID_NAME"  	headerText="' + se + '"		textAlign="center" 	width="80"	editable="false" />\
			<DataGridColumn dataField="SALE_QTY"	headerText="' + qY + '" 			textAlign="center" 	width="50"	editable="false" />\
			<DataGridColumn dataField="MGMT_ENTRY_1" headerText="' + standardMl + '" 	textAlign="right" 	width="70"	editable="false" labelJsFunction="labelFunc" />\
			<DataGridColumn dataField="SALE_ML"		headerText="' + salesMl + '" 		textAlign="right" 	width="70"	editable="false" labelJsFunction="labelFunc" />\
			<DataGridColumn dataField="ENU_ML"		headerText="' + overMl + '" 		textAlign="right" 	width="70"	editable="false" labelJsFunction="labelFunc" />\
			<DataGridColumn dataField="CUST_NAME"  	headerText="' + name + '" 			textAlign="left" 	width="90"	showEditableIcon="always"   itemRenderer="EditableIconItem" />\
			<DataGridColumn dataField="TEL_NO" 		headerText="' + phoneNumber + '" 	textAlign="center"  width="110" showEditableIcon="always"   itemRenderer="EditableIconItem" maxChars="11" labalJsFunction="rMateLabelPhoneFunc2" />\
			<DataGridColumn dataField="MOBIL_NO"  	headerText="' + mobilNo + '"		textAlign="left" 	width="110"	 />\
			<DataGridColumn dataField="JUMIN_NO"	headerText="' + birthDate + '" 		formatter="{datefmt}" textAlign="left" 	width="100"	showEditableIcon="always"   itemRenderer="EditableIconItem" maxChars="8" type="int"	/>\
			<DataGridColumn dataField="SEX"			headerText="' + sex + '" 			textAlign="center" 	width="50"	id="SEX" itemEditor="ComboBoxEditor" editorDataField="selectedDataField" itemRendererDataField="code" showEditableIcon="always" editableIcon="DownArrow"  itemRenderer="EditableIconItem" />\
			<DataGridColumn dataField="POST_NO"		headerText="' + addr + '"			textAlign="left" 	width="60"	editable="false" headerColSpan="3" />\
			<DataGridColumn dataField="ADDR"		textAlign="left" 	width="160"	editable="false" itemRenderer="IconItem" icon="Magnifier" />\
			<DataGridColumn dataField="ADDR_DTL"	textAlign="left" 	showEditableIcon="always"   itemRenderer="EditableIconItem" width="160"	/>\
			<DataGridColumn dataField="STR_CODE"	visible="false"	/>\
		</groupedColumns>\
		<dataProvider>\
			<SpanSummaryCollection source="{$gridData}">\
				<mergingFields>\
					<SpanMergingField name="SALE_DT"/>\
					<SpanMergingField name="POS_NO"/>\
					<SpanMergingField name="TRXN_NO"/>\
				</mergingFields>\
			</SpanSummaryCollection>\
		</dataProvider>\
	</DataGrid>\
</rMateGrid>';
//그리드1 데이터 초기화
var gridData = [];

// ----------------------- 그리드 설정 끝 -------------------------------------

//########################################################
//###   사용자 정의 함수 ( 시작 )   							   ###
//########################################################


function labelFunc(item, value, column){
	var str = value;
	return moneyComma(String(str));
}

function fnSearch(){
	var loadData 		= $("#top_search").serializeAllObject(); 
	var stdDt 			= $("#P_SEARCH_START_DT").val().replace(/-/g, "");
	var enddDt			= $("#P_SEARCH_END_DT").val().replace(/-/g, "");
	var P_STR_DT_ARR	= $("#P_SEARCH_START_DT").val().split("-");
	var P_END_DT_ARR 	= $("#P_SEARCH_END_DT").val().split("-");
	var strDt1			= new Date(P_STR_DT_ARR[0], Number(P_STR_DT_ARR[1])-1, P_STR_DT_ARR[2]); 
	var endDt1			= new Date(P_END_DT_ARR[0], Number(P_END_DT_ARR[1])-1, P_END_DT_ARR[2]); 
	var dateDiff1		= ((endDt1.getTime() - strDt1.getTime()) / 1000 / 60 / 60 / 24) + 1;


	//유효성검사
	if($.trim($("#P_SEARCH_START_DT").val() ) == null || $.trim($("#P_SEARCH_START_DT").val() ) == "")
	{
		confirm("판매일자" + msgConfirm);
		$("#P_SEARCH_START_DT").focus();
		return;
	}
	
	if($.trim($("#P_SEARCH_END_DT").val() ) == null || $.trim($("#P_SEARCH_END_DT").val() ) == "")
	{
		confirm("판매일자" + msgConfirm);
		$("#P_SEARCH_END_DT").focus();
		return;
	}
	
	if(Number(stdDt) > Number(enddDt))
	{
		alert(msgDateValidation);	
		$("#P_SEARCH_END_DT").focus();
		return;
	}

	if(dateDiff1 > 185) {
		alert("조회기간 185일 이상은 조회하실 수 없습니다.");
		$("#P_SEARCH_START_DT").focus();
		return;
	}
	
	loadData.P_STR_CODE = $("#P_STR_CODE").val();	
 
	//최초 로딩시 그리드1 데이터 조회 및 그리드 데이터 셋팅
	jQuery.ajax({ 
	    url:"/businessManageDrinkList.do",         
	    type:"POST",
		datatype:"json",
		data: loadData,
		beforeSend : function(){ 	    	
            gridRoot1.addLoadingBar();
	    },
		success:function(data){  
			gridApp1.setData(data.list);
			
	    },
	    complete : function(data) {
	    	dataGrid1.setEnabled(true);
	       	gridRoot1.removeLoadingBar();
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);
	    	dataGrid1.setEnabled(true);
	       	gridRoot1.removeLoadingBar();
	    }
	});
}

function fnUpdate(){
	var param = setProList();
	if(param == "N") return;
	if(!confirm(msgSaveConfirm)) return;
	
	jQuery.ajax({ 
	    url:"/businessManageDrinkUpdate.do",
	    type:"POST",
		datatype:"json",
		data: {
			'P_DATA_LIST' : param
		},
		beforeSend : function(){ 	    	
            gridRoot1.addLoadingBar();
	    },
		success:function(data){
			//그리드1 데이터 조회
			if(typeof data.RETURN_CODE != "undefined" && data.RETURN_CODE != null)
			{
				//alert(data.RETURN_CODE);
				if(data.RETURN_CODE > 0)
				{
					alert(msgSave);
					fnSearch();
				}
				else
				{
					alert(data.RETURN_MSG);
				}
			}
			else
			{
				alert(msgErrorDefault);
			}
	    },
	    complete : function(data) {
	    	dataGrid1.setEnabled(true);
	       	gridRoot1.removeLoadingBar();
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);
	    	dataGrid1.setEnabled(true);
	       	gridRoot1.removeLoadingBar();
	    }
	});
}

//그리드 데이터를 아래 형식으로 적재 후 return
function setProList()
{
	var paramData = "";
	var changedData = gridRoot1.getChangedData();
	if (changedData.length > 0)
	{
		// P_DATA_LIST 파리미터에 아래와 같은 형식의 스트링을 '$' '|' 두개의 구분자로 서버에전송 = '111|222|333,111|222|333,111|222|333'
		/* 성명|전화번호|생년월일|성별|우편번호|주소|상세주소
		 * CUST_NAME|TEL_NO|JUMIN_NO|SEX|POST_ NO|ADDR|ARRD_DTL
		 */
		var data;
		var sex_val = "";
		for (var i = 0; i < changedData.length; i++)
		{ 
			data = changedData[i].data;
			 
			if( data.SEX == "여")
			{
				sex_val = "F";
			} else if( data.SEX == "남")
			{
				sex_val = "M"; 
			} else {
				sex_val = data.SEX; 
			}
			
			
			if(paramData != "")
			{
				paramData += "$";
			}
			//alert(data.MID_CODE);
			paramData +=  CommonJs.isNullToString(data.SALE_DT.replace(/-/gi, ''), "") + "|" + CommonJs.isNullToString(data.STR_CODE, "") + "|" + CommonJs.isNullToString(data.POS_NO, "") + "|" + CommonJs.isNullToString(data.TRXN_NO, "")
				+ "|" + CommonJs.isNullToString(data.MID_CODE, "") + "|" + CommonJs.isNullToString(data.CUST_NAME, "") + "|" + CommonJs.isNullToString(data.TEL_NO, "") + "|" + CommonJs.isNullToString(data.JUMIN_NO, "")
				+ "|" + CommonJs.isNullToString(sex_val, "") + "|" + CommonJs.isNullToString(data.POST_NO, "") + "|" + CommonJs.isNullToString(data.ADDR, "") + "|" + CommonJs.isNullToString(data.ADDR_DTL, "");
		}
		 
		return paramData;
	}else{
		alert(stockRealMent17);
		return "N";
	}
}

//해당 점포의 POS 가져오기
function getPosList() {
	
	var html = "";
	var param = $("#top_search").serializeAllObject(); 
	
	jQuery.ajax({ 
	    url:"/getPosList.do",         
	    type:"POST",
		datatype:"json",
		data: param,
		success:function(data){
			if(typeof data != "undefined" && data != null)
			{
				html += "<option value=\"\">" + all + "</option>";
				for(var i=0; i<data.length; i++)
				{
					html += "<option value=\"" + data[i].POS_NO + "\">" + data[i].POS_NAME + "</option>";
				}
				$("#P_POS_NO").html(html);
			}
	    },
	    complete : function(data) {
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);
	    }
	});
}

//그리드내의 (우편번호 검색) 팝업 callback function
function fnPostCallBack(postcode, address){
	var selectedIndex = dataGrid1.getSelectedIndex();
	
	gridRoot1.setItemFieldAt( postcode , selectedIndex, "POST_NO");
	gridRoot1.setItemFieldAt( address , selectedIndex, "ADDR");
	//gridRoot1.setItemFieldAt( "" , selectedIndex, "ADDR_DTL");
}

//엑셀 export
function fnExcelExport(){
	var nowDate = new CommDateManager().getDate("yyyymmdd");
	
	dataGrid1.exportFileName = "주류초과판매대장_"+nowDate+".xlsx";
	gridRoot1.excelExportSave("/gridExcelDown.do", false);
};


function init() {
	var nowDate = new CommDateManager().getDate("yyyy-mm-dd");
	var firstDate = new CommDateManager().getDate("yyyy-mm") + "-01";
	
	$("#P_SEARCH_END_DT").val(nowDate);
	$("#P_SEARCH_START_DT").val(firstDate);
	getStoreCode("P_STR_CODE");
	$("#P_STR_CODE").val($("#SESSION_STR_CODE").val());
	
	getPosList();
}

//########################################################
//###   상단 버튼 구현 ( 끝 )   							   ###
//########################################################