/********************************************************
 * 설명:  콜센터주문등록
 * 수정일      	수정자       수정내용
 * ------------------------------------------------------
 * ------------------------------------------------------
 * author	: 권용욱
 * since	: 2017.01.12
 * version : 1.0
 ********************************************************/

//행사 시작 종료일 중복체크를 위한 Date조회용 변수
var checkDate = {};
var selectedIndex = -1;

var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!
var yyyy = today.getFullYear();
var hh = today.getHours();
var min = today.getMinutes();
if(dd < 10) {
    dd = '0' + dd;
} 
if(mm<10) {
    mm = '0' + mm;
}
if(hh < 10){
	hh = '0' + hh;
}
if(min<10){
	min = '0' + min;
}

$(document).ready(function(){
	
	init();
	
	//최초 도움말 불러오기 
	setHelpMessage($(location).attr('pathname').replace('/',''));
	
	$(".memo").height(100);
	
	var P_RCPT_DTTM_STR =new CommDateManager().getDate("yyyy-mm-01"); // 일주일전 before(년,월,일)
	var P_RCPT_DTTM_END = new CommDateManager().getDate("yyyy-mm-dd");
	
	$('#top_search input[name=P_RCPT_DTTM_STR]').val(P_RCPT_DTTM_STR);
	$('#top_search input[name=P_RCPT_DTTM_END]').val(P_RCPT_DTTM_END);
	
	$("#body_area2 select[name=SEQ]").change(function(){
		if($("#body_area2 select[name=SEQ]").val() != ""){
			jQuery.ajax({ 
			    url:"/selectUserClaimManage.do",         
			    type:"POST",
				datatype:"json",
				//async:false,
				data: {
							'P_RCPT_NO' : dataRow1.RCPT_NO
						,	'P_SEQ' : $("#body_area2 select[name=SEQ]").val()
						},
				success:function(data){  
					//gridApp1.setData(data);
					$("#body_area2 textarea[name=CONTS]").val(data[0].CONTS);
					$("#body_area2 input[name=IEMP_NAME]").val(data[0].IEMP_NAME);
					$("#body_area2 input[name=IDATE]").val(data[0].IDATE);
			    },
			    complete : function(data) {
			    },
			    error : function(xhr, status, error) {
			    	CommonJs.alertErrorStatus(xhr.status, error);   
			    }
			});
		}else{
			btnNew();
		}
	});
	
	$('#P_CUST_NAME').on('keydown', function(e) {
		$("#P_CUST_NO").val("");
	    if (e.which == 13) {
	    	btn_comm_user_search_top();
	    }
	});

	
	//달력설정
	$(".datepicker").datepicker({
		onSelect: function(dateText) {
			var startDate = parseInt($("#P_RCPT_DTTM_STR").val().replace(/-/g, ""));
			var endDate = parseInt($("#P_RCPT_DTTM_END").val().replace(/-/g, ""));
			if(startDate > endDate)
			{
				alert(msgDateValidation);
				
				if(this.id == "P_RCPT_DTTM_STR")
					$("#P_RCPT_DTTM_STR").val(P_RCPT_DTTM_STR);
				else if(this.id == "P_RCPT_DTTM_END")
					$("#P_RCPT_DTTM_END").val(P_RCPT_DTTM_END);
				
				return;
			}
		},showMonthAfterYear:true
	});
	
});


// ----------------------- 그리드 설정 시작 -------------------------------------
//rMate그리드 경로정보 셋팅
rMateGridH5.setAssetsPath("/resources/js/rMateGridH5/Assets/");
rMateGridH5.setConfig(rMateGridH5.style);

// rMate 그리드 생성 준비가 완료된 상태 시 호출할 함수를 지정합니다.
var jsVars1 = "rMateOnLoadCallFunction=gridReadyHandler1";
/*var jsVars2 = "rMateOnLoadCallFunction=gridReadyHandler2";*/

// rMateDataGrid 를 생성합니다.
// 파라메터 (순서대로)
//  1. 그리드의 id ( 임의로 지정하십시오. )
//  2. 그리드가 위치할 div 의 id (즉, 그리드의 부모 div 의 id 입니다.)
//  3. 그리드 생성 시 필요한 환경 변수들의 묶음인 jsVars
//  4. 그리드의 가로 사이즈 (생략 가능, 생략 시 100%)
//  5. 그리드의 세로 사이즈 (생략 가능, 생략 시 100%)
rMateGridH5.create("grid1", "gridHolder1", jsVars1, "100%");
//rMateGridH5.create("grid2", "gridHolder2", jsVars+"&dataType=xml", "100%", "180px");
/*rMateGridH5.create("grid2", "gridHolder2", jsVars2+"&dataType=xml", "100%");*/

// 그리드의 속성인 rMateOnLoadCallFunction 으로 설정된 함수.
// rMate 그리드의 준비가 완료된 경우 이 함수가 호출됩니다.
// 이 함수를 통해 그리드에 레이아웃과 데이터를 삽입합니다.
// 파라메터 : id - rMateGridH5.create() 사용 시 사용자가 지정한 id 입니다.
function gridReadyHandler1(id) {
	// rMateGrid 관련 객체
	gridApp1 = document.getElementById(id);	// 그리드를 포함하는 div 객체	
	gridRoot1 = gridApp1.getRoot();	// 데이터와 그리드를 포함하는 객체

	gridApp1.setLayout(layoutStr);
	gridApp1.setData(gridData1);
	
	gridRoot1.addEventListener("layoutComplete", layoutCompleteHandler1);
	gridRoot1.addEventListener("dataComplete", dataCompleteHandler1);
}

function itemClickHandler1(event){
	var rowIndex = event.rowIndex;
	dataRow1 = gridRoot1.getItemAt(rowIndex);
	
	$("#body_area input[name=CUST_NAME]").val(dataRow1.CUST_NAME);
	$("#body_area input[name=CUST_NO]").val(dataRow1.CUST_NO);
	$("#body_area input[name=MOBIL_NO]").val(dataRow1.MOBIL_NO);
	$("#body_area input[name=CLAIM_TP_NAME]").val(dataRow1.CLAIM_TP_NAME);
	$("#body_area input[name=STR_NAME]").val(dataRow1.STR_NAME);
	$("#body_area input[name=RCPT_EMP_NAME]").val(dataRow1.RCPT_EMP_NAME);
	$("#body_area select[name=CLAIM_STAT]").val(dataRow1.CLAIM_STAT);
	$("#body_area input[name=IEMP_NAME]").val(dataRow1.IEMP_NAME);
	$("#body_area input[name=IDATE]").val(dataRow1.IDATE);
	$("#body_area input[name=SUBJECT]").val(dataRow1.SUBJECT);
	$("#body_area textarea[name=CONTS]").val(dataRow1.CONTS);
	
	$("#body_area2 select[name=SEQ]").val("");
	$("#body_area2 input[name=IEMP_NAME]").val("");
	$("#body_area2 input[name=IDATE]").val("");
	$("#body_area2 textarea[name=CONTS]").val("");
	
	$("#body_area2 select[name=SEQ] option").remove();
	if(dataRow1.CLAIM_STAT == "3"){
		$("#body_area2 textarea[name=CONTS]").attr("disabled", true);
		
		jQuery.ajax({ 
		    url:"/selectUserClaimManage.do",         
		    type:"POST",
			datatype:"json",
			//async:false,
			data: {
						'P_RCPT_NO' : dataRow1.RCPT_NO
					,	'P_SEQ' : "1"
					},
			success:function(data){  
				//gridApp1.setData(data);
				$("#body_area2 textarea[name=CONTS]").val(data[0].CONTS);
				$("#body_area2 input[name=IEMP_NAME]").val(data[0].IEMP_NAME);
				$("#body_area2 input[name=IDATE]").val(data[0].IDATE);
		    },
		    complete : function(data) {
		    },
		    error : function(xhr, status, error) {
		    	CommonJs.alertErrorStatus(xhr.status, error);   
		    }
		});
	}else{
		$("#body_area2 select[name=SEQ]").append('<option value="">' + labelNew + '</option>');
		
		$("#body_area2 textarea[name=CONTS]").attr("disabled", false);
	}
	
	var detailCnt = dataRow1.CLAIM_CNT;
	
	if(detailCnt > 0){
		for(var i=0; i < detailCnt ; i++){
			$("#body_area2 select[name=SEQ]").append('<option value="' + (Number(i)+1) + '">'+ (Number(i)+1) +'</option>');
		}
	}
	
	
	
}

function layoutCompleteHandler1() {
	
	dataGrid1 = gridRoot1.getDataGrid();  // 그리드 객체
	
}

//그리드1 컴플릿트 핸들러
function dataCompleteHandler1(event) {
	
	// 그리드 객체
	dataGrid1 = gridRoot1.getDataGrid(); 
	
	// 데이터 그리드의 내부의 데이터를 담고있는 객체 입니다.
	collection1 = gridRoot1.getCollection();
	
	//그리드1 셀선택 이벤트
	dataGrid1.addEventListener("itemClick", itemClickHandler1);
	
	if(selectedIndexSaveBefoe != -1){
		
		//저장완료 후 저장전에 선택했던 인덱스를 선택 (조회시 -1으로 입력하기 때문에 조회 시에는 선택 안됨)
		dataGrid1.setSelectedIndex(selectedIndexSaveBefoe);
		
		//클릭 이벤트와 마찬가지로 로직 수행
		afterSaveEvent(selectedIndexSaveBefoe);
	}
	
}





//그리드1 데이터 초기화
var gridData1 = [];
//그리드의 데이터 제어를 위한 전역변수 설정
var gridApp1, gridRoot1, dataGrid1,dataRow1,clickData1,selectorColumn1;

//----------------------- 그리드 설정 끝 -----------------------

//그리드1 헤더 설정
var layoutStr =
	'<rMateGrid>\
	<DataGrid id="dg1" sortableColumns="true">\
		<columns>\
			<DataGridColumn dataField="RCPT_DT"  headerText="' + orderDate + '" textAlign="center" width="90" />\
			<DataGridColumn dataField="RCPT_NO"  headerText="접수번호" textAlign="center" width="90" />\
			<DataGridColumn dataField="STR_CODE"  headerText="' + storeCode + '" textAlign="center" visible="false" />\
			<DataGridColumn dataField="STR_NAME"  headerText="' + storNm + '" textAlign="center"  visible="false" />\
			<DataGridColumn dataField="RCPT_EMP"  headerText="RCPT_EMP" textAlign="center" visible="false" />\
			<DataGridColumn dataField="RCPT_EMP_NAME"  headerText="' + employeeName + '" textAlign="center"  visible="false" />\
			<DataGridColumn dataField="CLAIM_TP"  headerText="CLAIM_TP" textAlign="center" visible="false" />\
			<DataGridColumn dataField="CLAIM_TP_NAME"  headerText="' + claimTp + '" textAlign="center" visible="false" />\
			<DataGridColumn dataField="CUST_NAME"  headerText="' + customerNm + '" width="80" textAlign="center" />\
			<DataGridColumn dataField="CUST_NO"  headerText="' + customerNumber + '" textAlign="center"  visible="false" />\
			<DataGridColumn dataField="SUBJECT"  headerText="' + title + '" textAlign="left" />\
			<DataGridColumn dataField="CLAIM_STAT"  headerText="CLAIM_STAT" textAlign="center" visible="false" />\
			<DataGridColumn dataField="CLAIM_STAT_NAME"  headerText="' + claimStat + '" textAlign="center" width="80" />\
			<DataGridColumn dataField="CLAIM_CNT"  headerText="' + manageDetail + '" textAlign="center" visible="false" />\
			<DataGridColumn dataField="MOBIL_NO"  headerText="MOBIL_NO" visible="false" />\
			<DataGridColumn dataField="CONTS"  headerText="CONTS" visible="false" />\
			<DataGridColumn dataField="IDATE"  headerText="IDATE" visible="false" />\
			<DataGridColumn dataField="IEMP_NO"  headerText="IEMP_NO" visible="false" />\
			<DataGridColumn dataField="IEMP_NAME"  headerText="IEMP_NAME" visible="false" />\
			<DataGridColumn dataField="RCPT_DTTM"  headerText="' + orderDate + '" textAlign="center" visible="false" />\
		</columns>\
	</DataGrid>\
</rMateGrid>';


//그리드 row의 값을 변경하여 보여주기
function labelFunc(item, value, column){
  var str = item["DEL_YN"];//삭제여부 컬럼의 필드명
  if(str=="N")
    return "사용";
  else if(str=="Y")
   return "미사용";
}
// ----------------------- 그리드 설정 끝 -------------------------------------

function applyFormElementJquery() {
	$("#top_search").applyCommJquery();
}


function init() {
	
	$("#top_search select[name=P_STR_CODE]").append('<option value="">'+ all +'</option>');
	getStoreCode("top_search select[name=P_STR_CODE]");
	
	$("#top_search select[name=P_CLAIM_STAT]").append('<option value="">'+ all +'</option>');
	getCommonCodeSelectBoxList("top_search select[name=P_CLAIM_STAT]", "CLAIM_STAT");
	
	$("#P_CLAIM_TP").append('<option value="">'+ all +'</option>');
	getCommonCodeSelectBoxList("P_CLAIM_TP", "CLAIM_TP");
	
	getCommonCodeSelectBoxList("CLAIM_STAT", "CLAIM_STAT");
	
}


//########################################################
//###	8. init ( 시작 )   							   ###
//########################################################
  

//########################################################
//###   사용자 정의 함수 ( 시작 )   							   ###
//########################################################

function btn_comm_user_search_top(){
	$('#comm_pop_wrap1' ).dialog( 'open' );
	gridApp10.resize();
	
	// callback함수명을 P_CALLBACK_NM1에 값을 넘겨준다. (하나면 안넣어도 된다.)
	$("#P_CALLBACK_NM1").val('fn_comm_user_callback_top(dataRow10)');
	
	// 검색 텍스트를 부모창에 입력 할 경우 공통팝업이 뜨자마자 조회가 된다.
	if($("#P_CUST_NAME").val() != null && $("#P_CUST_NAME").val() != ""){
		$("#P_TEXT1").val($("#P_CUST_NAME").val());
		btn_comm_search('1');
	}
	
}

function fn_comm_user_callback_top(dataRow){
	$("#top_search input[name=P_CUST_NO]").val(dataRow.CUST_NO);
	$("#top_search input[name=P_CUST_NAME]").val(dataRow.CUST_NAME);
}


//조회 항목 초기화
function btnNew(){
	
	//dataGrid1.setSelectedIndex(2); return;
	//$("#body_area2 select[name=SEQ] option:last").attr("selected", "selected");

	if(dataRow1 != undefined){
		if(dataRow1.CLAIM_STAT == "3"){
			//진행상태가 완료인 클리엠건은 추가 처리내용을 등록 할 수 없습니다.
			alert(noneAddClaim);
			return;
		}
	}
	
	$("#body_area2 select[name=SEQ]").val("");
	$("#body_area2 input[name=IEMP_NAME]").val("");
	$("#body_area2 input[name=IDATE]").val("");
	$("#body_area2 textarea[name=CONTS]").val("");
	
}

function btnSearch(){
	
	selectedIndexSaveBefoe = -1;
	
	var startDate = $("#P_RCPT_DTTM_STR").val().split("-");
	var endDate = $("#P_RCPT_DTTM_END").val().split("-");

	if(Number(startDate[0] + startDate[1] + startDate[2]) > Number(endDate[0] + endDate[1] + endDate[2])){
		alert(msgDateValidation);
		return; 
	}
	
	//로딩바 출력
	showLoadingBar1();
	
	jQuery.ajax({ 
	    url:"/selectUserClaimRegist.do",         
	    type:"POST",
		datatype:"json",
		//async:false,
		data: {
					'P_STR_CODE' : $("#top_search select[name=P_STR_CODE]").val()
				,	'P_RCPT_DTTM_STR' : $("#top_search input[name=P_RCPT_DTTM_STR]").val()
				,	'P_RCPT_DTTM_END' : $("#top_search input[name=P_RCPT_DTTM_END]").val()
				,	'P_CLAIM_STAT' : $("#top_search select[name=P_CLAIM_STAT]").val()
				,	'P_CUST_NO'	:	$("#top_search input[name=P_CUST_NO]").val()
				,	'P_CLAIM_TP' : $("#top_search select[name=P_CLAIM_TP]").val()
				},
		success:function(data){  
			gridApp1.setData(data);
	    },
	    complete : function(data) {
	    	//로딩바 숨기기
	    	hideLoadingBar1();
	    },
	    error : function(xhr, status, error) {
	    	//로딩바 숨기기
	    	hideLoadingBar1();
	    	CommonJs.alertErrorStatus(xhr.status, error);   
	    }
	});
}

var selectedIndexSaveBefoe = -1;
function btnSave(){
	
	if(dataRow1 == undefined || dataRow1 == ""){
		//처리상세 내용을 등록하고자 하는 컴플레인 목록을 선택하세요.
		alert(selectClaim);
		return;
	}
	
	if(dataRow1 != undefined){
		if(dataRow1.CLAIM_STAT == "3"){
			//진행상태가 완료인 클리엠건은 추가 처리내용을 등록 할 수 없습니다.
			alert(noneAddClaim);
			return;
		}
	}
	
	if($("#body_area2 textarea[name=CONTS]").val() == "" || $("#body_area2 textarea[name=CONTS]").val() == null || $("#body_area2 textarea[name=CONTS]").val() == undefined){
		//처리상세 내용을 입력하세요
		alert(msgInputDetail);
		return;
	}
	
	if(confirm(msgSaveConfirm) == false) return;
	
	selectedIndexSaveBefoe = dataGrid1.getSelectedIndex();
	
	jQuery.ajax({ 
	    url:"/registUserClaimManage.do",         
	    type:"POST",
		datatype:"json",
		async:true,
		data: {
					'P_RCPT_NO' : dataRow1.RCPT_NO	
				,	'P_SEQ' : $("#body_area2 select[name=SEQ]").val()
				,	'P_CONTS' : $("#body_area2 textarea[name=CONTS]").val()
				,	'P_CLAIM_STAT' : $("#body_area select[name=CLAIM_STAT]").val()
				},
		success:function(data){
			btnNew();
			beforeSelected();
			$("#body_area2 select[name=SEQ] option").remove();
			$("#body_area2 select[name=SEQ]").append('<option value="">' + labelNew + '</option>');
			
			$("#body_area input[name=CUST_NAME]").val("");
			$("#body_area input[name=CUST_NO]").val("");
			$("#body_area input[name=MOBIL_NO]").val("");
			$("#body_area input[name=CLAIM_TP_NAME]").val("");
			$("#body_area input[name=STR_NAME]").val("");
			$("#body_area input[name=RCPT_EMP_NAME]").val("");
			$("#body_area input[name=CLAIM_STAT_NAME]").val("");
			$("#body_area input[name=IEMP_NAME]").val("");
			$("#body_area input[name=IDATE]").val("");
			$("#body_area input[name=SUBJECT]").val("");
			$("#body_area textarea[name=CONTS]").val("");
			
			alert(msgSave);
	    },
	    complete : function(data) {
	    	
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);   
	    }
	});
	
	
}

function afterSaveEvent(saveIndex){
	
	var rowIndex = saveIndex;
	dataRow1 = gridRoot1.getItemAt(rowIndex);
	
	$("#body_area input[name=CUST_NAME]").val(dataRow1.CUST_NAME);
	$("#body_area input[name=CUST_NO]").val(dataRow1.CUST_NO);
	$("#body_area input[name=MOBIL_NO]").val(dataRow1.MOBIL_NO);
	$("#body_area input[name=CLAIM_TP_NAME]").val(dataRow1.CLAIM_TP_NAME);
	$("#body_area input[name=STR_NAME]").val(dataRow1.STR_NAME);
	$("#body_area input[name=RCPT_EMP_NAME]").val(dataRow1.RCPT_EMP_NAME);
	$("#body_area select[name=CLAIM_STAT]").val(dataRow1.CLAIM_STAT);
	$("#body_area input[name=IEMP_NAME]").val(dataRow1.IEMP_NAME);
	$("#body_area input[name=IDATE]").val(dataRow1.IDATE);
	$("#body_area input[name=SUBJECT]").val(dataRow1.SUBJECT);
	$("#body_area textarea[name=CONTS]").val(dataRow1.CONTS);
	
	$("#body_area2 select[name=SEQ]").val("");
	$("#body_area2 input[name=IEMP_NAME]").val("");
	$("#body_area2 input[name=IDATE]").val("");
	$("#body_area2 textarea[name=CONTS]").val("");
	
	$("#body_area2 select[name=SEQ] option").remove();
	if(dataRow1.CLAIM_STAT == "3"){
		$("#body_area2 textarea[name=CONTS]").attr("disabled", true);
		
		jQuery.ajax({ 
		    url:"/selectUserClaimManage.do",         
		    type:"POST",
			datatype:"json",
			//async:false,
			data: {
						'P_RCPT_NO' : dataRow1.RCPT_NO
					,	'P_SEQ' : "1"
					},
			success:function(data){  
				//gridApp1.setData(data);
				$("#body_area2 textarea[name=CONTS]").val(data[0].CONTS);
				$("#body_area2 input[name=IEMP_NAME]").val(data[0].IEMP_NAME);
				$("#body_area2 input[name=IDATE]").val(data[0].IDATE);
		    },
		    complete : function(data) {
		    },
		    error : function(xhr, status, error) {
		    	CommonJs.alertErrorStatus(xhr.status, error);   
		    }
		});
	}else{
		$("#body_area2 select[name=SEQ]").append('<option value="">' + labelNew + '</option>');
		
		$("#body_area2 textarea[name=CONTS]").attr("disabled", false);
	}
	
	var detailCnt = dataRow1.CLAIM_CNT;
	
	if(detailCnt > 0){
		for(var i=0; i < detailCnt ; i++){
			if(i+1 == detailCnt){
				$("#body_area2 select[name=SEQ]").append('<option value="' + (Number(i)+1) + '" selected>'+ (Number(i)+1) +'</option>');
			}else{
				$("#body_area2 select[name=SEQ]").append('<option value="' + (Number(i)+1) + '">'+ (Number(i)+1) +'</option>');
			}
		}
	}
	
	jQuery.ajax({ 
	    url:"/selectUserClaimManage.do",         
	    type:"POST",
		datatype:"json",
		//async:false,
		data: {
					'P_RCPT_NO' : dataRow1.RCPT_NO
				,	'P_SEQ' : $("#body_area2 select[name=SEQ]").val()
				},
		success:function(data){  
			//gridApp1.setData(data);
			$("#body_area2 textarea[name=CONTS]").val(data[0].CONTS);
			$("#body_area2 input[name=IEMP_NAME]").val(data[0].IEMP_NAME);
			$("#body_area2 input[name=IDATE]").val(data[0].IDATE);
	    },
	    complete : function(data) {
	    },
	    error : function(xhr, status, error) {
	    	CommonJs.alertErrorStatus(xhr.status, error);   
	    }
	});
}

function beforeSelected(){
	
	var startDate = $("#P_RCPT_DTTM_STR").val().split("-");
	var endDate = $("#P_RCPT_DTTM_END").val().split("-");

	if(Number(startDate[0] + startDate[1] + startDate[2]) > Number(endDate[0] + endDate[1] + endDate[2])){
		alert(msgDateValidation);
		return; 
	}
	
	//로딩바 출력
	//showLoadingBar1();
	
	jQuery.ajax({ 
	    url:"/selectUserClaimRegist.do",         
	    type:"POST",
		datatype:"json",
		async:false,
		data: {
					'P_STR_CODE' : $("#top_search select[name=P_STR_CODE]").val()
				,	'P_RCPT_DTTM_STR' : $("#top_search input[name=P_RCPT_DTTM_STR]").val()
				,	'P_RCPT_DTTM_END' : $("#top_search input[name=P_RCPT_DTTM_END]").val()
				,	'P_CLAIM_STAT' : $("#top_search select[name=P_CLAIM_STAT]").val()
				,	'P_CUST_NO'	:	$("#top_search input[name=P_CUST_NO]").val()
				,	'P_CLAIM_TP' : $("#top_search select[name=P_CLAIM_TP]").val()
				},
		success:function(data){  
			gridApp1.setData(data);
	    },
	    complete : function(data) {
	    	//로딩바 숨기기
	    	//hideLoadingBar1();
	    },
	    error : function(xhr, status, error) {
	    	//로딩바 숨기기
	    	//hideLoadingBar1();
	    	CommonJs.alertErrorStatus(xhr.status, error);   
	    }
	});
	
}

//########################################################
//###   상단 버튼 구현 ( 끝 )   							   ###
//########################################################
$(document).ready(function (){
	$(".lft_wid").width(($(window).width()-58)*0.35);
	$(".rgt_wid").width(($(window).width()-58)*0.65);
	$(".tbl_st2 input.wid1").width(156);
	$(".tbl_st2 input.wid2, .tbl_st2 select.wid2").width(87);
	
	$("#gridHolder1").height($(window).height()-108);

	$(window).on('resize',function (){	
		$(".lft_wid").width(($(window).width()-58)*0.35);
		$(".rgt_wid").width(($(window).width()-58)*0.65);
		
		$("#gridHolder1").height($(window).height()-108);	
	});
});

//그리드 로딩바  보이기
function showLoadingBar1() {
    gridRoot1.addLoadingBar();
}
//그리드 로딩바  숨기기
function hideLoadingBar1() {
    gridRoot1.removeLoadingBar();
}

